# Secure Lock After 5 Mins Of Inactivity, Launch And Hide stalonetray, Launch clipmenu Daemon, Launch xmonad On xinit
echo -e 'xset s 300 5\nxss-lock -n /usr/lib/xsecurelock/dimmer -l -- xsecurelock &\nstalonetray &\nsleep 0.5\nxdotool windowunmap "$(xdotool search --class stalonetray)"\nclipmenud &\nexec xmonad' >> ~/.xinitrc

# startx On Login Into TTY 1
echo -e '\nif [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then\n\texec startx\nfi' >> ~/.bash_profile

# Customize stalonetray To Have A Width Of 8 Icons, A Black Background, Force Icon Sizes To Be Equal To icon_size, Grow The Tray Towards The North West Direction, Position Icons Closer To The North East Corner, Icon Size Of 12, Make Tray Sticky Across Multiple Desktops, Bottom Window Layer, And Hide The Tray's Window From A Taskbar
echo -e 'geometry 8x1-0+0\nmax_geometry 8x1-0+0\nbackground "#000000"\nkludges force_icons_size\ngrow_gravity NW\nicon_gravity NE\nicon_size 12\nsticky true\nwindow_layer bottom\nskip_taskbar true' > ~/.stalonetrayrc

# Customize xmobar To Show The Battery Percentage, CPU Usage Percentage, CPU Core Temperature, Memory Usage, Network Monitor, Wireless Network Monitor, Audio Device Name, Audio Volume, Audio Mute Status, Data, Keyboard Language, Keyboard Locks
echo 'Config {'$'\n''    -- Appearance'$'\n''    bgColor =    "black"'$'\n''    , position = Top'$'\n'''$'\n''    -- Layout'$'\n''    , sepChar =  "%" -- Delineator Between Plugin Names And Straight Text'$'\n''    , alignSep = "}{" -- Separator Between Left-Right Alignment'$'\n''    , template = "%battery% | %multicpu% | %coretemp% | %memory% | %dynnetwork% | %wlan0wi% }{ %audiodevice% %volume%%mute% | %date% || %kbd% %locks%" -- Plugin Layout'$'\n'''$'\n''    -- General Behavior'$'\n''    , lowerOnStart =     True -- Send To Bottom Of Window Stack On Start'$'\n''    , hideOnStart =      False -- Start With Window Unmapped (Hidden)'$'\n''    , allDesktops =      True -- Show On All Desktops'$'\n''    , overrideRedirect = True -- Set The Override Redirect Flag (Xlib)'$'\n''    , pickBroadest =     False -- Choose Widest Display (Multi-Monitor)'$'\n''    , persistent =       True -- Enable/Disable Hiding (True = Disabled)'$'\n'''$'\n''    -- Plugins'$'\n''    , commands = '$'\n''        -- Network Activity Monitor (Dynamic Interface Resolution)'$'\n''        [ Run DynNetwork [ "--template" , "<dev>: <tx>kB/s|<rx>kB/s"'$'\n''                         , "--Low"      , "1000" -- Units: B/s'$'\n''                         , "--High"     , "5000" -- Units: B/s'$'\n''                         , "--low"      , "darkgreen"'$'\n''                         , "--normal"   , "darkorange"'$'\n''                         , "--high"     , "darkred"'$'\n''                         ] 10'$'\n'''$'\n''        -- Wireless Network Activity Monitor'$'\n''        , Run Wireless "wlan0" [ "--template" , "<essid>: <quality>%"'$'\n''                               , "--Low"      , "40" -- Units: %'$'\n''                               , "--High"     , "85" -- Units: %'$'\n''                               , "--low"      , "darkred"'$'\n''                               , "--normal"   , "darkorange"'$'\n''                               , "--high"     , "darkgreen"'$'\n''                               ] 10'$'\n'''$'\n''        -- Cpu Activity Monitor'$'\n''        , Run MultiCpu [ "--template" , "Cpu: <total0>%|<total1>%"'$'\n''                       , "--Low"      , "50" -- Units: %'$'\n''                       , "--High"     , "85" -- Units: %'$'\n''                       , "--low"      , "darkgreen"'$'\n''                       , "--normal"   , "darkorange"'$'\n''                       , "--high"     , "darkred"'$'\n''                       ] 10'$'\n'''$'\n''        -- Cpu Core Temperature Monitor'$'\n''        , Run CoreTemp [ "--template" , "Temp: <core0>°C|<core1>°C"'$'\n''                       , "--Low"      , "70" -- Units: °C'$'\n''                       , "--High"     , "80" -- Units: °C'$'\n''                       , "--low"      , "darkgreen"'$'\n''                       , "--normal"   , "darkorange"'$'\n''                       , "--high"     , "darkred"'$'\n''                       ] 50'$'\n'''$'\n''        -- Memory Usage Monitor'$'\n''        , Run Memory [ "--template" ,"Mem: <usedratio>%"'$'\n''                     , "--Low"      , "20" -- Units: %'$'\n''                     , "--High"     , "90" -- Units: %'$'\n''                     , "--low"      , "darkgreen"'$'\n''                     , "--normal"   , "darkorange"'$'\n''                     , "--high"     , "darkred"'$'\n''                     ] 10'$'\n'''$'\n''        -- Battery Monitor'$'\n''        , Run Battery [ "--template" , "Batt: <acstatus>"'$'\n''                      , "--Low"      , "10" -- Units: %'$'\n''                      , "--High"     , "80" -- Units: %'$'\n''                      , "--low"      , "darkred"'$'\n''                      , "--normal"   , "darkorange"'$'\n''                      , "--high"     , "darkgreen"'$'\n''        '$'\n''                      , "--" -- Battery Specific Options'$'\n''                      , "-o" , "<left>% (<timeleft>)" -- Discharging Status'$'\n''                      , "-O" , "<fc=#dAA520>Charging</fc>" -- AC "on" Status'$'\n''                      , "-i" , "<fc=#006000>Charged</fc>" -- Charged Status'$'\n''                      ] 50'$'\n'''$'\n''        -- Volume Indicators'$'\n''        , Run Com "bash" [ "-c"'$'\n''                         , "SINKS=$(pacmd list-sinks | grep -Pzo \"\\* index(.*\\n)*\" | sed \\$d); echo \"$(echo -n \"$SINKS\" | grep -m 1 -e \"device.description\" | cut -f2 -d\\\" | cut -c1-12) [$(echo -n \"$SINKS\" | grep -m 1 -e \"device.profile.description\" | cut -f2 -d\\\")]\""'$'\n''                         ] "audiodevice" 40'$'\n''        , Run Com "bash" [ "-c"'$'\n''                         , "echo -e \"Vol: $(pactl get-sink-volume @DEFAULT_SINK@ | grep Volume | awk '"'"'{print $5}'"'"')\""'$'\n''                         ] "volume" 4'$'\n''        , Run Com "bash" [ "-c"'$'\n''                         , "if [[ \"$(pactl get-sink-mute @DEFAULT_SINK@)\" =~ \"yes\" ]]; then echo -n \" [MUTE]\"; fi"'$'\n''                         ] "mute" 10'$'\n''     '$'\n''        -- Time And Date Indicator '$'\n''        --   (%F = y-m-d Date, %a = Day Of Week, %T = h:m:s Time)'$'\n''        , Run Date "<fc=#ABABAB>%F (%a) %T</fc>" "date" 10'$'\n'''$'\n''        -- Keyboard Layout Indicator'$'\n''        , Run Kbd [ ("us(dvorak)" , "<fc=#00008B>DV</fc>")'$'\n''                  , ("us"         , "<fc=#8B0000>US</fc>")'$'\n''                  ]'$'\n'''$'\n''        -- Caps, Num, And Scroll Lock Indicator'$'\n''        , Run Locks'$'\n''    ]'$'\n''}' > ~/.xmobarrc

# Customize xmonad For Thin Window Borders, Keyboard Shortcuts For Secure Locking, dmenu, clipmenu, stalonetray, And Screenshoting, And Media Key Functionality For Screen Brightness, Volume, Media Playback, Microphone Muting, Touchpad Toggling, And Webcam Toggling
mkdir ~/.xmonad


#################################################################################
# MIT License
#
# (License Applies To The Last Portion Of The Following echo String)
#
# Original Code Copyright (c) 2021 Tomáš Janoušek (https://github.com/liskin)
# Original Code May Be Found At:
#     https://github.com/liskin/dotfiles/blob/68adb642da1422b45eb251ff2981a6304cafa739/.xmonad/xmonad.hs
#     https://github.com/liskin/dotfiles/blob/68adb642da1422b45eb251ff2981a6304cafa739/bin/liskin-media
#     https://github.com/liskin/dotfiles/blob/68adb642da1422b45eb251ff2981a6304cafa739/bin/liskin-touchpad-toggle
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

echo 'import XMonad'$'\n''import XMonad.Util.EZConfig (additionalKeys)'$'\n''import Graphics.X11.ExtraTypes.XF86'$'\n''import XMonad.Hooks.EwmhDesktops'$'\n''import XMonad.Hooks.DynamicLog'$'\n''import XMonad.Hooks.StatusBar'$'\n''import XMonad.Hooks.StatusBar.PP'$'\n'''$'\n''main = do'$'\n''    xmonad . ewmhFullscreen . ewmh . withEasySB (statusBarProp "xmobar" (pure xmobarPP)) toggleStrutsKey $ myConfig'$'\n'''$'\n''myXmobarPP :: PP'$'\n''myXmobarPP = def'$'\n''    { ppCurrent = wrap " " ""'$'\n''    }'$'\n'''$'\n''toggleStrutsKey :: XConfig Layout -> (KeyMask, KeySym)'$'\n''toggleStrutsKey XConfig{ modMask = modMask } = (modMask, xK_b)'$'\n'''$'\n''myConfig = def'$'\n''        -- Assign Meta Key To Left Super Or Windows Key'$'\n''        { modMask = mod4Mask'$'\n''        '$'\n''        -- Set Border Width To 1 Pixel Wide'$'\n''        , borderWidth = 1'$'\n'''$'\n''        -- Set Normal Border Color To Black'$'\n''        , normalBorderColor = "#000"'$'\n'''$'\n''        -- Disable Window Focus On Mouse Hover'$'\n''        , focusFollowsMouse = False'$'\n'''$'\n''        } `additionalKeys`'$'\n'''$'\n''        -- Secure Lock With Meta+Shift+Z'$'\n''        [ ((mod4Mask .|. shiftMask, xK_z), spawn "xsecurelock")'$'\n'''$'\n''        -- Open dmenu With Meta+P'$'\n''        , ((mod4Mask, xK_p), spawn "dmenu_run")'$'\n'''$'\n''        -- Open clipmenu With Meta+V'$'\n''        , ((mod4Mask, xK_v), spawn "clipmenu")'$'\n'''$'\n''        -- Toggle stalonetray With Meta+T'$'\n''        , ((mod4Mask, xK_t), spawn "STALONETRAYID=\"$(xdotool search --class stalonetray)\"; if [[ \"$(xwininfo -id \"$STALONETRAYID\" | grep \"Map State\")\" =~ \"Viewable\" ]]; then xdotool windowunmap \"$STALONETRAYID\"; else xdotool windowmap \"$STALONETRAYID\"; fi")'$'\n'''$'\n''        -- Save Fullscreen Screenshot File In ~/screenshots With PrintScreen'$'\n''        , ((0, xK_Print), spawn "scrot ~/screenshots/%Y-%m-%d-%T-screenshot.png")'$'\n'''$'\n''        -- Open Screenshot GUI With Meta+PrintScreen'$'\n''        , ((mod4Mask, xK_Print), spawn "flameshot gui")'$'\n'''$'\n''        -- Increase And Decrease Screen Brightness With MediaBrightnessUp Or Meta+PageUp And MediaBrightnessDown Or Meta+PageDown'$'\n''        , ((0, xF86XK_MonBrightnessUp), spawn "xbacklight -inc 2")'$'\n''        , ((0, xF86XK_MonBrightnessDown), spawn "xbacklight -dec 2")'$'\n''        , ((mod4Mask, xK_Page_Up), spawn "xbacklight -inc 2")'$'\n''        , ((mod4Mask, xK_Page_Down), spawn "xbacklight -dec 2")'$'\n'''$'\n''        -- Increase, Decrease, And Mute Volume With MediaVolumeUp, MediaVolumeDown, And MediaMute'$'\n''        , ((0 , xF86XK_AudioRaiseVolume), spawn "pactl set-sink-volume @DEFAULT_SINK@ +2.0%")'$'\n''        , ((0 , xF86XK_AudioLowerVolume), spawn "pactl set-sink-volume @DEFAULT_SINK@ -2.0%")'$'\n''        , ((0 , xF86XK_AudioMute), spawn "pactl set-sink-mute @DEFAULT_SINK@ toggle")'$'\n'''$'\n'''$'\n''----------------------------------------------------------------------------------'$'\n''-- MIT License'$'\n''--'$'\n''-- (License Applies To The Remaining Code In This File)'$'\n''--'$'\n''-- Original Code Copyright (c) 2021 Tomáš Janoušek (https://github.com/liskin)'$'\n''-- Original Code May Be Found At:'$'\n''--     https://github.com/liskin/dotfiles/blob/68adb642da1422b45eb251ff2981a6304cafa739/.xmonad/xmonad.hs '$'\n''--     https://github.com/liskin/dotfiles/blob/68adb642da1422b45eb251ff2981a6304cafa739/bin/liskin-media '$'\n''--     https://github.com/liskin/dotfiles/blob/68adb642da1422b45eb251ff2981a6304cafa739/bin/liskin-touchpad-toggle'$'\n''--'$'\n''-- Permission is hereby granted, free of charge, to any person obtaining a copy'$'\n''-- of this software and associated documentation files (the "Software"), to deal'$'\n''-- in the Software without restriction, including without limitation the rights'$'\n''-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell'$'\n''-- copies of the Software, and to permit persons to whom the Software is'$'\n''-- furnished to do so, subject to the following conditions:'$'\n''--'$'\n''-- The above copyright notice and this permission notice shall be included in all'$'\n''-- copies or substantial portions of the Software.'$'\n''--'$'\n''-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR'$'\n''-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,'$'\n''-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE'$'\n''-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER'$'\n''-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'$'\n''-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE'$'\n''-- SOFTWARE.'$'\n'''$'\n''        -- Play, Pause, And Stop Media Playback With MediaPlay, MediaPause, And MediaStop'$'\n''        , ((0, xF86XK_AudioPlay), spawn "playerctl -p \"$($(playerctl --all-players --format '"'"'{{playerName}} {{status}}'"'"' status | while read -r player status; do if [[ $status == Playing ]]; then printf \"%s\\n\" \"$player\"; return; fi; done; return 1) || $(local -a players=(); playerctl --all-players --format '"'"'{{playerName}} {{status}}'"'"' status | while read -r player status; do if [[ $status == @(Paused|Playing) ]]; then players+=(\"$player\"); fi; done; if (( \"$(( ${players[@]+${#players[@]}} ))\" == 1 )); then echo \"${players[0]}\"; else return 1; fi) || $(if [[ -f \"${XDG_RUNTIME_DIR}/liskin-media-last\" ]]; then echo \"$(< \"${XDG_RUNTIME_DIR}/liskin-media-last\")\"; else return 1; fi))\" play-pause")'$'\n''        , ((0, xF86XK_AudioPause), spawn "playerctl -p \"$($(playerctl --all-players --format '"'"'{{playerName}} {{status}}'"'"' status | while read -r player status; do if [[ $status == Playing ]]; then printf \"%s\\n\" \"$player\"; return; fi; done; return 1) || $(local -a players=(); playerctl --all-players --format '"'"'{{playerName}} {{status}}'"'"' status | while read -r player status; do if [[ $status == @(Paused|Playing) ]]; then players+=(\"$player\"); fi; done; if (( \"$(( ${players[@]+${#players[@]}} ))\" == 1 )); then echo \"${players[0]}\"; else return 1; fi) || $(if [[ -f \"${XDG_RUNTIME_DIR}/liskin-media-last\" ]]; then echo \"$(< \"${XDG_RUNTIME_DIR}/liskin-media-last\")\"; else return 1; fi))\" play-pause")'$'\n''        , ((0, xF86XK_AudioStop), spawn "playerctl -a stop")'$'\n'''$'\n''        -- Next And Previous Media Playback With MediaNext And MediaPrevious'$'\n''        , ((0, xF86XK_AudioNext), spawn "playerctl -p \"$(playerctl --all-players --format '"'"'{{playerName}} {{status}}'"'"' status | while read -r player status; do if [[ $status == Playing ]]; then printf \"%s\\n\" \"$player\"; return; fi; done; return 1)\" next")'$'\n''        , ((0, xF86XK_AudioPrev), spawn "playerctl -p \"$(playerctl --all-players --format '"'"'{{playerName}} {{status}}'"'"' status | while read -r player status; do if [[ $status == Playing ]]; then printf \"%s\\n\" \"$player\"; return; fi; done; return 1)\" previous")'$'\n'''$'\n''        -- Toggle Microphone Mute With MediaMicrophoneMute'$'\n''        , ((0, xF86XK_AudioMicMute), spawn "pactl set-source-mute @DEFAULT_SOURCE@ toggle")'$'\n'''$'\n''        -- Toggle Touchpad With MediaTouchpadToggle'$'\n''        , ((0, xF86XK_TouchpadToggle), spawn "set -eu; d=$(xinput --list --name-only | grep Touchpad); if [[ \"$(xinput list-props \"${d:?device}\")\" =~ \"Device Enabled \"[^[:space:]]*:$'"'"'\\t'"'"'1 ]]; then xinput disable \"$d\"; else xinput enable \"$d\"; fi")'$'\n'''$'\n''        -- Toggle Webcam With MediaWebcamToggle'$'\n''        , ((0, xF86XK_WebCam), spawn "function status-handsfree { local info; info=$(pactl info); if [[ $info =~ \"Default Sink: bluez_sink.\"([0-9A-F_]*)\".a2dp_sink\" ]]; then echo \"${BASH_REMATCH[1]}\" 0; elif [[ $info =~ \"Default Sink: bluez_sink.\"([0-9A-F_]*)\".handsfree_head_unit\" ]]; then echo \"${BASH_REMATCH[1]}\" 1; fi }; function status-camera { local camera; camera=$(usbguard list-devices --blocked | awk -F: '"'"'/ name \"Integrated Camera\" / { print $1 }'"'"'); if [[ $camera ]]; then echo \"$camera\" 0; exit; fi; camera=$(usbguard list-devices --allowed | awk -F: '"'"'/ name \"Integrated Camera\" / { print $1 }'"'"'); if [[ $camera ]]; then echo \"$camera\" 1; exit; fi }; function set-handsfree { local bt_addr handsfree; bt_addr=\"${1:?}\" && handsfree=\"${2:?}\"; if (( handsfree )); then pactl set-card-profile bluez_card.\"$bt_addr\" handsfree_head_unit; else pactl set-card-profile bluez_card.\"$bt_addr\" a2dp_sink; fi }; function set-camera { local usb_dev camera; usb_dev=\"${1:?}\" && camera=\"${2:?}\"; if (( camera )); then usbguard allow-device \"$usb_dev\"; dunstify -i camera-web -u low -t 2000 \"Integrated Camera allowed\"; else usbguard block-device \"$usb_dev\"; dunstify -i camera-web -u low -t 2000 \"Integrated Camera blocked\"; fi }; function toggle-videocall { local bt_addr handsfree; local usb_dev camera; status-handsfree | read -r bt_addr handsfree || :; status-camera | read -r usb_dev camera || :; local desired; [[ $handsfree == 0 || $camera == 0 ]] && desired=1 || desired=0; if [[ $bt_addr ]]; then set-handsfree \"$bt_addr\" $desired; fi; if [[ $usb_dev ]]; then set-camera \"$usb_dev\" $desired; fi }; toggle-videocall")'$'\n'''$'\n''----------------------------------------------------------------------------------'$'\n'''$'\n'''$'\n''        ]' > ~/.xmonad/xmonad.hs

#################################################################################